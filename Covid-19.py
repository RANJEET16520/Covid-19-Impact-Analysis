import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


Confirmed = pd.read_csv('time_series-ncov-Confirmed.csv')
Confirmed_df = pd.DataFrame(Confirmed)
Confirmed_df = Confirmed_df.drop(Confirmed_df.index[0])
Confirmed_df = Confirmed_df.astype({'Value':float}) 
print(Confirmed_df.shape)
print(Confirmed_df.dtypes)
print(Confirmed_df.head())

Deaths = pd.read_csv('time_series-ncov-Deaths.csv')
Deaths_df = pd.DataFrame(Deaths)
Deaths_df = Deaths_df.drop(Deaths_df.index[0])
Deaths_df = Deaths_df.astype({'Value':float}) 
print(Deaths_df.shape)
print(Deaths_df.head())

Recovered = pd.read_csv('time_series-ncov-Recovered.csv')
Recovered_df = pd.DataFrame(Recovered)
Recovered_df = Recovered_df.drop(Recovered_df.index[0])
Recovered_df = Recovered_df.astype({'Value':float}) 
print(Recovered_df.shape)
print(Recovered_df.head())


Confirmed_df.rename({'Value':'Confirmed_Cases'},axis=1,inplace=True)
Confirmed_df = Confirmed_df.drop(["Lat", "Long"], axis = 1)
print(Confirmed_df.head())

Deaths_df.rename({'Value':'Deaths'},axis=1,inplace=True)
Deaths_df = Deaths_df.drop(["Lat", "Long"], axis = 1)
print(Deaths_df.head())

Recovered_df.rename({'Value':'Recovered'},axis=1,inplace=True)
Recovered_df = Recovered_df.drop(["Lat", "Long"], axis = 1)
print(Recovered_df.head())

Confirmed_df = Confirmed_df.sort_values(['Country/Region','Date'], ascending=True).drop('Province/State', axis=1)
Confirmed_df = Confirmed_df.groupby(['Country/Region','Date']).sum()
print(Confirmed_df.head())

Deaths_df = Deaths_df.sort_values(['Country/Region','Date'], ascending=True).drop('Province/State', axis=1)
Deaths_df = Deaths_df.groupby(['Country/Region','Date']).sum()
print(Deaths_df.head())

Recovered_df = Recovered_df.sort_values(['Country/Region','Date'], ascending=True).drop('Province/State', axis=1)
Recovered_df = Recovered_df.groupby(['Country/Region','Date']).sum()
print(Recovered_df.head())

Combined_df = Confirmed_df.merge(Deaths_df, left_index=True, right_on=['Country/Region','Date'])
Combined_df = Combined_df.merge(Recovered_df, left_index=True, right_on=['Country/Region','Date'])
Combined_df = Combined_df.reset_index(level=['Country/Region','Date'])

Combined_df.to_csv('Final_data.csv')


Effected_Countries = set(Combined_df['Country/Region'].to_list())
print(len(Effected_Countries))
print(Effected_Countries)
print(len(set(Combined_df.Date)))
print(Combined_df[Combined_df.Date=='2020-03-19'])


India = Combined_df[Combined_df['Country/Region']=='India']
print(India.iloc[-1])
India.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in India")
plt.show()
India.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in India")
plt.show()
India.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in India")
plt.show()
fig, ax = plt.subplots(figsize=(17, 17))
plt.bar(India['Date'], India['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(India['Date'], India['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(India['Date'], India['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(India['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in India", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/India.png')
plt.show()


USA = Combined_df[Combined_df['Country/Region']=='US']
print(USA.iloc[-1])
USA.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in USA")
plt.show()
USA.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in USA")
plt.show()
USA.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in USA")
plt.show()
fig, ax = plt.subplots(figsize=(17, 17))
plt.bar(USA['Date'], USA['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(USA['Date'], USA['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(USA['Date'], USA['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(USA['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in USA", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/USA.png')
plt.show()


China = Combined_df[Combined_df['Country/Region']=='China']
print(China.iloc[-1])
China.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in China")
plt.show()
China.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in China")
plt.show()
China.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in China")
plt.show()
fig, ax = plt.subplots(figsize=(17, 17))
plt.bar(China['Date'], China['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(China['Date'], China['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(China['Date'], China['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(China['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in China", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/China.png')
plt.show()


Italy = Combined_df[Combined_df['Country/Region']=='Italy']
print(Italy.iloc[-1])
Italy.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in Italy")
plt.show()
Italy.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in Italy")
plt.show()
Italy.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in Italy")
plt.show()
fig, ax = plt.subplots(figsize=(17, 17))
plt.bar(Italy['Date'], Italy['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(Italy['Date'], Italy['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(Italy['Date'], Italy['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(Italy['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in Italy", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/Italy.png')
plt.show()


Spain = Combined_df[Combined_df['Country/Region']=='Spain']
print(Spain.iloc[-1])
Spain.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in Spain")
plt.show()
Spain.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in Spain")
plt.show()
Spain.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in Spain")
plt.show()
fig, ax = plt.subplots(figsize=(17, 17))
plt.bar(Spain['Date'], Spain['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(Spain['Date'], Spain['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(Spain['Date'], Spain['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(Spain['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in Spain", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/Spain.png')
plt.show()


Germany = Combined_df[Combined_df['Country/Region']=='Germany']
print(Germany.iloc[-1])
Germany.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in Germany")
plt.show()
Germany.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in Germany")
plt.show()
Germany.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in Germany")
plt.show()
fig, ax = plt.subplots(figsize=(17, 17))
plt.bar(Germany['Date'], Germany['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(Germany['Date'], Germany['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(Germany['Date'], Germany['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(Germany['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in Germany", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/Germany.png')
plt.show()


World = Combined_df[['Date','Confirmed_Cases','Deaths','Recovered']]
World = World.groupby('Date').sum()
World = World.reset_index(level=['Date'])
print(World)
World.plot(x = 'Date', y = 'Confirmed_Cases', kind="bar")
plt.title("Confirmed Cases in Entire World")
plt.show()
World.plot(x = 'Date', y = 'Deaths', kind="bar")
plt.title("Confirmed Deaths in Entire World")
plt.show()
World.plot(x = 'Date', y = 'Recovered', kind="bar")
plt.title("Cases Recovered in Entire World")
plt.show()
fig, ax = plt.subplots(figsize=(19, 19))
plt.bar(World['Date'], World['Confirmed_Cases'],label = 'Confirmed Cases')
plt.bar(World['Date'], World['Recovered'], color = 'cyan', label ='Recovered')
plt.bar(World['Date'], World['Deaths'], color = 'red', label = 'Death')
plt.xlabel('Daily Assessment', fontsize=30, fontweight='bold')
plt.xticks(fontsize=12, fontweight='bold')
ax.xaxis.set_major_formatter(plt.NullFormatter()) 
# ax.set_xticklabels(World['Date'],rotation='vertical')
plt.ylabel('Persons Affected', fontsize=30, fontweight='bold')
plt.yticks(fontsize=30, fontweight='bold')
plt.legend(fontsize=25)
plt.title("COVID-19 Analysis in Entire World", fontsize = 30, fontweight='bold')
plt.savefig('Analysis Pics/World.png')
plt.show()